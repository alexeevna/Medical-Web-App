version: "3.5"

services:
  orchestrator:
    image: belobog/mirforchestrator1
    environment:
      - SERVER_PORT=5011
      - MEDICAL_WEB_APP_URL=medwebapp
      - MEDICAL_WEB_APP_PORT=7999
#      - MEDICAL_WEB_APP_URL_SUCCESS=medwebapp:80/api/mirf/mirfSuccess
    ports:
      - "5011:5011"
    networks:
      - app_net

#  ecgreaderblock:
#    image: ashvyrkova/mirfblock
#    environment:
#      - SERVER_PORT=8056
#      - BLOCK_TYPE=ecgReaderAlg
#      - ORCHESTRATOR_HOST=orchestrator
#      - ORCHESTRATOR_PORT=5011
#    networks:
#      - app_net
#    depends_on:
#      - orchestrator
#
#  ecgbeatextractorblock:
#    image: ashvyrkova/mirfblock
#    environment:
#      - SERVER_PORT=8057
#      - BLOCK_TYPE=ecgBeatExtractorAlg
#      - ORCHESTRATOR_HOST=orchestrator
#      - ORCHESTRATOR_PORT=5011
#    networks:
#      - app_net
#    depends_on:
#      - orchestrator
#
#  dicomreaderblock:
#    image: ashvyrkova/mirfblockml
#    environment:
#      - SERVER_PORT=8058
#      - BLOCK_TYPE=dicomImageSeriesReaderAlg
#      - ORCHESTRATOR_HOST=orchestrator
#      - ORCHESTRATOR_PORT=5011
#    networks:
#      - app_net
#    depends_on:
#      - orchestrator
#
#  addmaskblock:
#    image: ashvyrkova/mirfblockml
#    environment:
#      - SERVER_PORT=8059
#      - BLOCK_TYPE=dicomAddCircleMaskAlg
#      - ORCHESTRATOR_HOST=orchestrator
#      - ORCHESTRATOR_PORT=5011
#    networks:
#      - app_net
#    depends_on:
#      - orchestrator
#
#  highlightedpdfalg:
#    image: ashvyrkova/mirfblockml
#    environment:
#      - SERVER_PORT=8060
#      - BLOCK_TYPE=convertHighlightedDicomImagesToPdfAlg
#      - ORCHESTRATOR_HOST=orchestrator
#      - ORCHESTRATOR_PORT=5011
#    networks:
#      - app_net
#    depends_on:
#      - orchestrator
#
#  seriespdfalg:
#    image: ashvyrkova/mirfblockml
#    environment:
#      - SERVER_PORT=8061
#      - BLOCK_TYPE=convertDicomImagesToPdfAlg
#      - ORCHESTRATOR_HOST=orchestrator
#      - ORCHESTRATOR_PORT=5011
#    networks:
#      - app_net
#    depends_on:
#      - orchestrator
#
#  pdfcreatoralg:
#    image: ashvyrkova/mirfblockml
#    environment:
#      - SERVER_PORT=8062
#      - BLOCK_TYPE=pdfFileCreatorAlg
#      - ORCHESTRATOR_HOST=orchestrator
#      - ORCHESTRATOR_PORT=5011
#    networks:
#      - app_net
#    depends_on:
#      - orchestrator

  pipelinealg:
    image: ashvyrkova/mirfblockml
    environment:
      - SERVER_PORT=8063
      - BLOCK_TYPE=pipelineForDeveloping
      - ORCHESTRATOR_HOST=orchestrator
      - ORCHESTRATOR_PORT=5011
    networks:
      - app_net
    depends_on:
      - orchestrator
      - mirfrepository
    command: ["sh", "wait-for-orchestrator.sh", "java","-jar","block-1.0-SNAPSHOT.jar"]

  ihdpipeline:
    image: ashvyrkova/mirfblockml
    environment:
      - SERVER_PORT=8064
      - BLOCK_TYPE=ihdClassifierAlg
      - ORCHESTRATOR_HOST=orchestrator
      - ORCHESTRATOR_PORT=5011
    networks:
      - app_net
    depends_on:
      - orchestrator
      - mirfrepository
    command: ["sh", "wait-for-orchestrator.sh", "java","-jar","block-1.0-SNAPSHOT.jar"]

  mirfrepository:
    image: ashvyrkova/mirfrepository
    environment:
      - SERVER_PORT=8050
      - ORCHESTRATOR_HOST=orchestrator
      - ORCHESTRATOR_PORT=5011
    ports:
      - "8050:8050"
    networks:
      - app_net
    depends_on:
      - orchestrator
    command: ["sh", "wait-for-orchestrator.sh", "java","-jar","repository-1.0-SNAPSHOT.jar"]



  medwebpostgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=secretpassword
      - POSTGRES_DB=medwebappdb
      - POSTGRES_PORT=5555
      - PGPORT=5555
    ports:
      - "5555:5555"
    networks:
      - app_net

  testcontainerpostgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=secretpassword
      - POSTGRES_DB=medwebappdb
      - POSTGRES_PORT=1111
      - PGPORT=1111
    ports:
      - "1111:1111"
    networks:
      - app_net

  sftp:
    image: atmoz/sftp
#    volumes:
#      - <host-dir>/upload:/home/foo/upload
    ports:
      - "4999:22"
    command: medwebuser:secretpassword:::upload
    networks:
      - app_net

  orthanc:
    image: jodogne/orthanc-plugins
    #    volumes:
    #      - <host-dir>/upload:/home/foo/upload
    ports:
      - "8042:8042"
    networks:
      - app_net
    command: /run/secrets/
    secrets:
      - orthanc.json

  proxy:
    image: nginx:1.15-alpine
    ports:
      - "8899:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - orthanc
    networks:
      - app_net

  medwebapp:
    image: ashvyrkova/medwebapp
    environment:
      - SERVER_PORT=7999
      - MIRF_ORCHESTRATOR_URL=orchestrator
      - MIRF_ORCHESTRATOR_PORT=5011
      - MIRF_REPOSITORY_URL=mirfrepository
      - MIRF_REPOSITORY_PORT=8050
      - ORTHANC_URL=http://orthanc:8042
      - SPRING_DATASOURCE_URL=jdbc:postgresql://medwebpostgres:5555/medwebappdb
      - SFTP_URL=sftp
      - SFTP_PORT=22
    ports:
      - "7999:7999"
    depends_on:
      - pipelinealg
      - mirfrepository
      - medwebpostgres
      - sftp
    networks:
      - app_net

secrets:
  orthanc.json:
    file: orthanc.json

networks:
  app_net:
    driver: bridge